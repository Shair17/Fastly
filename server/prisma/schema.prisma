// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// TODO: Agregar enlaces de avatars por defecto en las entidades de usuarios

model Admin {
  id                 String   @id @default(cuid())
  name               String
  email              String   @unique
  dni                String   @db.VarChar(8)
  phone              String   @db.VarChar(9)
  address            String
  avatar             String?
  isBanned           Boolean  @default(false)
  banReason          String?
  isActive           Boolean  @default(false)
  birthDate          DateTime
  password           String
  refreshToken       String?  @db.VarChar(1024)
  resetPasswordToken String?  @db.VarChar(1024)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("admins")
}

model Customer {
  id                 String   @id @default(cuid())
  name               String
  email              String   @unique
  dni                String   @db.VarChar(8)
  phone              String   @db.VarChar(9)
  address            String
  avatar             String?
  isBanned           Boolean  @default(false)
  banReason          String?
  isActive           Boolean  @default(false)
  birthDate          DateTime
  password           String
  refreshToken       String?  @db.VarChar(1024)
  resetPasswordToken String?  @db.VarChar(1024)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("customers")
}

enum Vehicle {
  CARRO
  MOTO
  BICICLETA
  PIE
  NONE
}

model Dealer {
  id                 String   @id @default(cuid())
  name               String
  email              String   @unique
  dni                String   @db.VarChar(8)
  phone              String   @db.VarChar(9)
  address            String
  avatar             String?
  isBanned           Boolean  @default(false)
  banReason          String?
  isActive           Boolean  @default(false)
  birthDate          DateTime
  password           String
  refreshToken       String?  @db.VarChar(1024)
  resetPasswordToken String?  @db.VarChar(1024)
  vehicle            Vehicle  @default(NONE)
  available          Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("dealers")
}

model User {
  id                  String        @id @default(cuid())
  name                String
  email               String?
  phone               String?       @db.VarChar(9)
  dni                 String?       @db.VarChar(8)
  avatar              String?
  refreshToken        String?       @db.VarChar(1024)
  facebookId          String
  facebookAccessToken String        @db.VarChar(512)
  isBanned            Boolean       @default(false)
  banReason           String?
  addresses           UserAddress[]
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt

  @@map("users")
}

enum UserAddressTag {
  CASA
  AMIGO
  PAREJA
  TRABAJO
  UNIVERSIDAD
  OTRO
}

model UserAddress {
  id           String         @id @default(cuid())
  name         String
  street       String
  instructions String
  zip          String
  city         String
  tag          UserAddressTag
  latitude     Float          @db.Float()
  longitude    Float          @db.Float()
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("users_addresses")
}
